(function(o,r){typeof exports=="object"&&typeof module<"u"?module.exports=r():typeof define=="function"&&define.amd?define(r):(o=typeof globalThis<"u"?globalThis:o||self,o.SnapyForms=r())})(this,function(){"use strict";var l=Object.defineProperty;var m=(o,r,t)=>r in o?l(o,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[r]=t;var i=(o,r,t)=>m(o,typeof r!="symbol"?r+"":r,t);class o{constructor(t){i(this,"config");i(this,"container",null);i(this,"formData",null);i(this,"isOpen",!1);this.config=t,this.init()}async init(){try{const t=await fetch(`https://cwcyjjogegbttltkextf.supabase.co/functions/v1/get-published-form?formId=${this.config.formId}`,{headers:{Authorization:`Bearer ${this.config.apiKey}`}});if(!t.ok)throw new Error("Failed to load form configuration");this.formData=await t.json(),this.createContainer(),this.renderBubble()}catch(t){console.error("SnapyForms initialization failed:",t)}}createContainer(){this.container=document.createElement("div"),this.container.id="snapyforms-container",document.body.appendChild(this.container);const t=document.createElement("style");t.textContent=`
      #snapyforms-container {
        position: fixed;
        z-index: 9999;
        font-family: ${this.formData.metadata.fontFamily||"system-ui"};
      }

      .snapyforms-bubble {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background-color: ${this.formData.metadata.themeColor};
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
      }

      .snapyforms-bubble:hover {
        transform: scale(1.1);
      }

      .snapyforms-form {
        position: fixed;
        bottom: 100px;
        right: 20px;
        width: 360px;
        max-height: 70vh;
        background: white;
        border-radius: 8px;
        box-shadow: 0 4px 24px rgba(0, 0, 0, 0.1);
        display: none;
        flex-direction: column;
        overflow: hidden;
      }

      .snapyforms-form.open {
        display: flex;
        animation: snapyforms-slide-up 0.3s ease-out;
      }

      @keyframes snapyforms-slide-up {
        from {
          transform: translateY(20px);
          opacity: 0;
        }
        to {
          transform: translateY(0);
          opacity: 1;
        }
      }

      .snapyforms-header {
        padding: 16px;
        background-color: ${this.formData.metadata.themeColor};
        color: white;
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
      }

      .snapyforms-close {
        background: none;
        border: none;
        color: white;
        cursor: pointer;
        padding: 4px;
        opacity: 0.8;
        transition: opacity 0.2s;
      }

      .snapyforms-close:hover {
        opacity: 1;
      }

      .snapyforms-content {
        padding: 16px;
        overflow-y: auto;
      }

      .snapyforms-field {
        margin-bottom: 16px;
      }

      .snapyforms-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 500;
      }

      .snapyforms-input {
        width: 100%;
        padding: 8px 12px;
        border: 1px solid #e2e8f0;
        border-radius: 4px;
        font-size: 14px;
      }

      .snapyforms-input:focus {
        outline: none;
        border-color: ${this.formData.metadata.themeColor};
        box-shadow: 0 0 0 1px ${this.formData.metadata.themeColor};
      }

      .snapyforms-submit {
        width: 100%;
        padding: 10px;
        background-color: ${this.formData.metadata.themeColor};
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        font-weight: 500;
        transition: opacity 0.2s;
      }

      .snapyforms-submit:hover {
        opacity: 0.9;
      }

      .snapyforms-error {
        color: #e53e3e;
        font-size: 12px;
        margin-top: 4px;
      }
    `,document.head.appendChild(t)}renderBubble(){var a,n;const t=document.createElement("div");t.className="snapyforms-bubble",t.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path></svg>',t.onclick=()=>this.toggleForm(),(a=this.container)==null||a.appendChild(t);const e=document.createElement("div");e.className="snapyforms-form",e.innerHTML=this.generateFormHTML(),(n=this.container)==null||n.appendChild(e);const s=e.querySelector("form");s&&(s.onsubmit=p=>this.handleSubmit(p))}generateFormHTML(){return`
      <div class="snapyforms-header">
        <div>
          <h2 style="margin: 0; font-size: 18px;">${this.formData.metadata.title}</h2>
          <p style="margin: 4px 0 0; font-size: 14px; opacity: 0.9;">${this.formData.metadata.description}</p>
        </div>
        <button class="snapyforms-close" onclick="this.toggleForm()">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
        </button>
      </div>
      <div class="snapyforms-content">
        <form>
          ${this.formData.fields.map(t=>this.generateFieldHTML(t)).join("")}
          <button type="submit" class="snapyforms-submit">
            ${this.formData.metadata.submitButtonText||"Submit"}
          </button>
        </form>
      </div>
    `}generateFieldHTML(t){const e=t.required?"required":"";let s="";switch(t.type){case"text":case"email":case"number":s=`<input type="${t.type}" class="snapyforms-input" name="${t.id}" placeholder="${t.placeholder||""}" ${e}>`;break;case"textarea":s=`<textarea class="snapyforms-input" name="${t.id}" placeholder="${t.placeholder||""}" ${e}></textarea>`;break;default:s=`<input type="text" class="snapyforms-input" name="${t.id}" placeholder="${t.placeholder||""}" ${e}>`}return`
      <div class="snapyforms-field">
        <label class="snapyforms-label">
          ${t.label}
          ${e?'<span style="color: #e53e3e;">*</span>':""}
        </label>
        ${s}
      </div>
    `}async handleSubmit(t){t.preventDefault();const e=t.target,s=new FormData(e),a={};s.forEach((n,p)=>{a[p]=n});try{if(!(await fetch("https://cwcyjjogegbttltkextf.supabase.co/functions/v1/submit-form-response",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`},body:JSON.stringify({formId:this.config.formId,responseData:a})})).ok)throw new Error("Failed to submit form");alert("Form submitted successfully!"),this.toggleForm(),e.reset()}catch(n){console.error("Form submission failed:",n),alert("Failed to submit form. Please try again.")}}toggleForm(){var e;const t=(e=this.container)==null?void 0:e.querySelector(".snapyforms-form");t&&(this.isOpen=!this.isOpen,t.classList.toggle("open",this.isOpen))}}return window.SnapyForms=o,o});
